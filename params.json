{
  "name": "Jab-react-tree",
  "tagline": "React tree component",
  "body": "# jab-react-tree [![Build Status](https://travis-ci.org/gabchang/jab-react-tree.svg)](https://travis-ci.org/gabchang/jab-react-tree)\r\nReact tree component\r\n\r\nThis is a fork of [react-ui-tree](https://pqx.github.io/react-ui-tree) by [Wang Zuo](https://github.com/pqx).\r\nThis project was initially developed for a webpage builder. It maintains an internal tree structure within the component through [js-tree](https://github.com/wangzuo/js-tree).\r\n\r\n### Demo\r\n[https://pqx.github.io/react-ui-tree](https://pqx.github.io/react-ui-tree)\r\n\r\n### Installation\r\n``` sh\r\nnpm install react-ui-tree --save\r\n```\r\n\r\n### Properties\r\n\r\n  * paddingLeft {Number}              \r\n    Left padding for children nodes in pixels\r\n  * tree {Object}\r\n    Tree object (nested)\r\n  * onChange {Func}\r\n    Gets the full tree object as parameter\r\n  * renderNode {Func}\r\n    Return react element\r\n  * onDragStart {Func}\r\n    Gets the dragging node as parameter\r\n  * onDragEnd {Func}\r\n    Gets the dropped node as parameter\r\n\r\n### Tree object\r\n\r\nA nested object :\r\n\r\n```\r\nconst tree = {\r\n  <your custom node props>\r\n  children: [\r\n    {\r\n      <your custom node props>\r\n    },\r\n    ...\r\n  ]\r\n}\r\n```\r\n\r\n### Node object\r\n\r\n```\r\n{\r\n  id    : {Number}, // The internal node id\r\n  top   : {Number}, // internal id\r\n  left  : {Number}, // internal id\r\n  prev  : {Number}, // internal id\r\n  next  : {Number}, // internal id\r\n  parent: {Number}, // internal id\r\n  node  : {Object}, // Node state with your custom props\r\n}\r\n```\r\n\r\n### Node.node\r\n\r\n```\r\n{\r\n  collapsed: {Bool} // Open or closed state\r\n  leaf     : {Bool} // If true, can not have child\r\n  ...(your custom props)\r\n}\r\n```\r\n\r\n### Usage\r\n``` javascript\r\n<Tree\r\n  paddingLeft={20}              // left padding for children nodes in pixels\r\n  tree={this.state.tree}        // tree object\r\n  onChange={this.handleChange}  // onChange(tree) tree object changed\r\n  renderNode={this.renderNode}  // renderNode(node) return react element\r\n  onDragStart={ (node) => () }  // onDragStart(node) the dragging tree node\r\n  onDragEnd={ (node) => () }    // onDragEnd(node) the dropped tree node\r\n/>\r\n\r\n// a sample tree object\r\n// node.children, node.collapsed, node.leaf properties are hardcoded\r\n{\r\n  \"module\": \"react-ui-tree\",\r\n  \"children\": [{\r\n    \"collapsed\": true,\r\n    \"module\": \"dist\",\r\n    \"children\": [{\r\n      \"module\": \"node.js\"\r\n    }]\r\n  }]\r\n}\r\n```\r\ncheck [app.js](https://github.com/gabchang/jab-react-tree/blob/master/example/app.js) for a working example\r\n\r\n### Development\r\n- npm install\r\n- npm start\r\n- http://localhost:8888/example\r\n\r\n### License\r\nMIT\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}